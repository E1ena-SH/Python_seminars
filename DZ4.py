# ==== 1
# Вычислить число Пи c заданной точностью d
# Пример:   при d = 0.001, π = 3.141
#           при d = 0.1, π = 3.1
#           при d = 0.00001, π = 3.14159

# π = 3
# a= 2
# for i in range(1,100):
#     π+= 4/(a*(a+1)*(a+2))
#     a+=2
#     π-= 4/(a*(a+1)*(a+2))
#     a+=2

# d = int(input('Задайте параметр "d":  '))
# print(round(π, d))

# ==== 2
# Задайте натуральное число N. Напишите программу, 
# которая составит список простых множителей числа N.


# num = int(input("Введите натуральное число N: "))
# i = 1
# lst = []
# old = num
# while i <= num:
#     if num % i == 0:
#         lst.append(i)
#         num //= i
#         i = 2
#     else:
#         i += 1
# print(f"Простые множители числа {old}: {lst}")

# ==== 3
# Задайте последовательность цифр. Напишите программу, 
# которая выведет список неповторяющихся элементов исходной последовательности.
# Пример: 47756688399943 -> [5]
#         1113384455229 -> [8,9]
#         1115566773322 -> []

# lst = list(input('Введите цифры без пробела: '))
# print(lst)
# unique_list = []
# for i in range(0, len(lst)):
#     if lst.count(lst[i]) > 1: continue
#     else: unique_list.append(lst[i])

# print(unique_list)

# ====3 
# Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от -100 до 100)
# многочлена и записать в файл многочлен степени k
# k - максимальная степень многочлена, следующий степень следующего на 1 меньше и так до ноля
# Коэффициенты расставляет random, поэтому при коэффициенте 0 просто пропускаем данную итерацию степени
# Записываем результат в файл.
# Пример:       k=2 -> 2x² + 4x + 5 = 0 или x² + 5 = 0 или 10x² = 0
#               k=5 -> 3x⁵ + 5x⁴ - 6x³ - 3x = 0

# import random

# k = int(input('Введите число от 1 до 9: '))
# list = [0]*(k+1)
# for i in range(len(list)):
#     list[i] = str(random.randint(0,101)) +'x^'+str(k) +' + '
#     if k == 1:
#         list[i] = str(random.randint(0,101))+'x + '
#     if k == 0:
#         list[i] = str(random.randint(0,101))+' = 0'
#     k-=1
# print(''.join(list))

# ==== 5
# Даны два файла, в каждом из которых находится запись многочлена.
# Задача - сформировать файл, содержащий сумму многочленов.
# Пример двух заданных многочленов:       23x⁹ - 16x⁸ + 3x⁷ + 15x⁴ - 2x³ + x² + 20 = 0
#                                         17x⁹ + 15x⁸ - 8x⁷ + 15x⁶ - 10x⁴ + 7x³ - 13x + 33 = 0
# Результат:                              40x⁹ - x⁸ -5x⁷ + 15x⁶ +5x⁴ + 5x³ + x² - 13x + 53 = 0